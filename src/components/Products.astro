---
import menuData from '../../data/menuData.json';
---
<div class="py-12 bg-gray-100">
    <div class="container mx-auto text-center">
        <h2 class="mb-6 text-3xl font-futura">Categorías</h2>
        <div class="flex flex-wrap justify-center mb-8 space-x-4">
            <div class="grid w-full grid-cols-2 gap-4 md:grid-cols-4">
                {menuData.map((category) => (
                    <>
                        <input id={category.id} type="radio" name="tabs" class="hidden" />
                        <label for={category.id} class="px-4 py-2 transition duration-300 border rounded-lg shadow-md cursor-pointer tab-label hover:bg-secondary hover:text-white">
                            {category.name}
                        </label>
                    </>
                ))}
            </div>
        </div>
        <div class="hidden sm:block justify-center mb-8">
            <img src="/images/logo-dorado.png" alt="Logo Milmaray">
        </div>
        <div class="flex justify-center mb-8">
            <a href="/mi-pedido" class="flex items-center px-4 py-2 text-white transition duration-200 rounded-lg shadow bg-primary hover:bg-secondary">
                Ir a mi pedido
                <i class="ml-2 fas fa-utensils"></i>
            </a>
        </div>
        {menuData.map((category) => (
            <section id={`content${category.id}`} class="hidden text-left tab-content">
                <h3 class="pb-2 mb-6 text-xl font-semibold text-center border-b-2 border-secondary">
                    {category.name.toUpperCase()}
                </h3>
                <div class="grid grid-cols-1 gap-8 md:grid-cols-2">
                    {category.items.map((item) => (
                        <div class="bg-white p-6 md:p-12 rounded-lg shadow-md hover:shadow-lg transition duration-300 flex flex-col justify-between min-h-[300px] mb-4 md:mb-0">
                            <div class="flex flex-col items-center mb-4">
                                <img src={item.image} alt={item.name} class="object-cover w-16 h-16 mb-2 rounded-full md:w-24 md:h-24"/>
                                <div class="text-center">
                                    <div class="flex items-center justify-between">
                                        <h6 class="text-lg font-semibold">{item.name}</h6>
                                        <h6 class="text-lg font-semibold text-secondary">{item.price}</h6>
                                    </div>
                                    <hr />
                                    <p class="mt-3 text-justify text-gray-600">{item.description}</p>
                                </div>
                            </div>
                            <div class="flex justify-end mt-2">
                                <button
                                    class="flex items-center px-4 py-2 text-white transition duration-300 rounded-lg bg-primary hover:bg-secondary menu-item-add-to-cart"
                                    data-item-name={item.name}
                                    data-item-price={item.price}
                                >
                                    <i class="mr-2 fas fa-concierge-bell"></i>
                                    Agregar a mi pedido
                                </button>
                            </div>
                        </div>
                    ))}
                </div>
            </section>
        ))}
    </div>
</div>

<script>
    interface CartEvent extends CustomEvent {
        detail: {
            cart: { name: string; price: number; quantity: number }[];
        };
    }

    function updateContent() {
        const contents = document.querySelectorAll('.tab-content');
        contents.forEach(content => content.classList.add('hidden'));

        const selectedTab = document.querySelector('input[name="tabs"]:checked');
        if (selectedTab) {
            const contentId = `content${selectedTab.id}`;
            const selectedContent = document.getElementById(contentId);
            if (selectedContent) {
                selectedContent.classList.remove('hidden');
            }

            const labels = document.querySelectorAll('.tab-label');
            labels.forEach(label => {
                label.classList.remove('bg-secondary', 'text-white');
                label.classList.add('text-black');
            });

            const activeLabel = document.querySelector(`label[for="${selectedTab.id}"]`);
            if (activeLabel) {
                activeLabel.classList.add('bg-secondary', 'text-white');
                activeLabel.classList.remove('text-black');
            }
        }
    }

    async function addToCartHandler(event: MouseEvent) {
        const button = event.currentTarget as HTMLElement;
        const itemName = button.getAttribute('data-item-name');
        const itemPrice = parseFloat(button.getAttribute('data-item-price').replace('S/ ', '').replace(',', ''));

        const Swal = (await import('sweetalert2')).default;

        const result = await Swal.fire({
            title: '¿Agregar al pedido?',
            text: `¿Estás seguro de que deseas agregar ${itemName} por S/ ${itemPrice.toFixed(2)}?`,
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#082a50',
            cancelButtonColor: '#a07600',
            confirmButtonText: 'Sí, agregar!',
            cancelButtonText: 'Cancelar'
        });

        if (result.isConfirmed) {
            const cart = JSON.parse(localStorage.getItem('cart')) || [];

            const existingProductIndex = cart.findIndex(item => item.name === itemName);
            if (existingProductIndex > -1) {
                cart[existingProductIndex].quantity += 1;
            } else {
                cart.push({ name: itemName, price: itemPrice, quantity: 1 });
            }

            localStorage.setItem('cart', JSON.stringify(cart));

            const cartEvent = new CustomEvent('product-added', { detail: { cart } });
            document.dispatchEvent(cartEvent);

            Swal.fire({
                title: '¡Agregado!',
                text: `${itemName} ha sido agregado a tu pedido.`,
                icon: 'success',
                confirmButtonColor: '#082a50',
            });
        }
    }

    function displayCartItems(cart) {
        const cartContainer = document.getElementById('cart');
        if (!cartContainer) return;

        cartContainer.innerHTML = '';

        let total = 0;

        cart.forEach(item => {
            total += item.price * item.quantity;
            const itemElement = document.createElement('div');
            itemElement.textContent = `${item.name} - S/ ${item.price.toFixed(2)} x ${item.quantity}`;
            cartContainer.appendChild(itemElement);
        });

        const totalElement = document.createElement('div');
        totalElement.textContent = `Total: S/ ${total.toFixed(2)}`;
        cartContainer.appendChild(totalElement);
    }

    document.addEventListener('product-added', (event: CartEvent) => {
        const cart = event.detail.cart;
        displayCartItems(cart);
    });

    document.addEventListener('DOMContentLoaded', () => {
        updateContent();

        const tabInputs = document.querySelectorAll('input[name="tabs"]');
        tabInputs.forEach(input => input.addEventListener('change', updateContent));

        const buttons = document.querySelectorAll('.menu-item-add-to-cart');
        buttons.forEach(button => {
            button.addEventListener('click', addToCartHandler);
        });
    });
</script>
