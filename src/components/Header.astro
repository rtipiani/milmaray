---
interface Props {
    links?: { path: string; label: string }[];
}
const defaultLinks = [
    { path: '/', label: 'Home' },
    { path: '/carta-milmaray', label: 'Carta Virtual' },
    { path: '/mi-pedido', label: 'Mi Pedido' },
    { path: '/contactenos', label: 'ContÃ¡ctenos' }
];
const links = Astro.props.links && Astro.props.links.length > 0 ? Astro.props.links : defaultLinks;
const currentPath = Astro.url.pathname;
---
<header id="header" class="fixed top-0 left-0 z-30 w-full bg-transparent transition-all duration-300 ease-in-out">
    <nav class="p-4">
        <div class="container flex items-center justify-between mx-auto">
            <div>
                <a href="/" title="Ir al inicio">
                    <img class="h-20" src="/images/logo-white.png" alt="Logo Milmaray" />
                </a>
            </div>

            <div class="hidden space-x-4 md:flex">
                {links.map((link) => (
                    <a href={link.path} class={`text-white font-futura text-lg ${link.path === currentPath ? 'active' : ''}`}>
                        {link.label}
                    </a>
                ))}
            </div>

            <div class="md:hidden">
                <button id="menu-button" class="text-secondary focus:outline-none">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                    </svg>
                </button>
            </div>
        </div>
    </nav>

    <div id="mobile-menu" class="fixed top-0 left-0 w-full h-screen hidden transform scale-95 opacity-0 transition-all duration-300 ease-in-out md:hidden bg-primary bg-opacity-95">
        <div class="flex flex-col items-center justify-center h-full space-y-8">
            <button id="close-button" class="absolute top-6 right-6 text-white">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
            {links.map((link) => (
                <a
                    href={link.path}
                    class={`block text-white p-4 hover:bg-gray-700 font-futura text-lg w-full text-center ${link.path === currentPath ? 'active' : ''}`}
                >
                    {link.label}
                </a>
            ))}
        </div>
    </div>
</header>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const menuButton = document.getElementById('menu-button');
        const closeButton = document.getElementById('close-button');
        const mobileMenu = document.getElementById('mobile-menu');
        const header = document.getElementById('header');

        menuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
            mobileMenu.classList.toggle('scale-100');
            mobileMenu.classList.toggle('scale-95');
            mobileMenu.classList.toggle('opacity-100');
            mobileMenu.classList.toggle('opacity-0');
        });

        closeButton.addEventListener('click', () => {
            mobileMenu.classList.add('hidden');
        });

        mobileMenu.addEventListener('click', (event) => {
            const target = event.target as HTMLElement;
            if (target.tagName === 'A') {
                mobileMenu.classList.add('hidden');
            }
        });

        const handleScroll = () => {
            if (window.scrollY > 50) {
                header.classList.add('bg-primary', 'bg-opacity-95', 'shadow-lg');
                header.classList.remove('bg-transparent');
            } else {
                header.classList.add('bg-transparent');
                header.classList.remove('bg-primary', 'bg-opacity-90', 'shadow-lg');
            }
        };

        window.addEventListener('scroll', handleScroll);

        handleScroll();
    });
</script>